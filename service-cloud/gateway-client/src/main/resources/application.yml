server:
  port: 8083

spring:
  application.name: backend-gateway-client
  cloud:
    gateway:
      routes:
        - id: blog-service
          uri: http://localhost:8085/blog
          predicates:
            Path=/blog/**
          filters:
            TokenRelay=
            RemoveRequestHeader=Cookie
        - id: profile-service
          uri: http://localhost:8086/profile
          predicates:
            Path=/profile/**
          filters:
            TokenRelay=
            RemoveRequestHeader=Cookie

  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: my-provider
            client-id: advanced-project-client-id
            client-secret: 00WNOdpLhcysZDZCOKFogYLAo31jysmZ
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8083/login/oauth2/code/{registrationId}"
            scope: openid, message.read
        provider:
          my-provider:
            issuer-uri: http://localhost:8081/auth/realms/advanced-project-realm

management:

  endpoints:
    web:
      exposure:
        include: health,prometheus

  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
